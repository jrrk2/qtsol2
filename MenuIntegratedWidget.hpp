// ===== CORRECTED MenuIntegratedWidget.hpp =====

#ifndef MENU_INTEGRATED_WIDGET_H
#define MENU_INTEGRATED_WIDGET_H

#include <QWidget>
#include <QString>
#include <QEvent>
#include <QWindowStateChangeEvent>

// Forward declarations
class LuaWindowFactory;
class Sol2QtMainWindow;

class MenuIntegratedWidget : public QWidget
{
    Q_OBJECT

protected:
    LuaWindowFactory* windowFactory;
    QString menuTitle;
    bool isRegisteredWithMenu;
    bool isUsingAutoTitle;
    static int globalWindowCounter;

public:
    explicit MenuIntegratedWidget(QWidget* parent = nullptr);
    explicit MenuIntegratedWidget(const QString& explicitTitle, QWidget* parent = nullptr);
    virtual ~MenuIntegratedWidget();

protected:
    // Virtual methods - subclasses can override
    virtual QString generateAutoTitle();
    virtual QString getNextAutoTitle() const;

private:
    void autoRegisterWithGlobalFactory(const QString& title);

public:
    void registerWithMenu(const QString& title = QString());
    void unregisterFromMenu();
    
    // CORRECTED: Remove 'override' from non-virtual methods
    void setWindowTitle(const QString& title);
    void setCustomTitle(const QString& title);
    void resetToAutoTitle();
    
    void show();
    void hide();
    void setVisible(bool visible) override;
    
    bool isRegistered() const { return isRegisteredWithMenu; }
    bool isUsingAutoGeneratedTitle() const { return isUsingAutoTitle; }
    QString getMenuTitle() const { return menuTitle; }

signals:
    void visibilityChanged(bool visible);
    void titleChanged(const QString& title);

protected:
    bool event(QEvent* event) override;
};

#endif // MENU_INTEGRATED_WIDGET_H
